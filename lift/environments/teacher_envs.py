import gymnasium as gym
from lift.environments.simulator import WindowSimulator

"""TODO: implement this"""
class TeacherEnv(gym.Wrapper):
    """Environment controlled by teacher

    - Observations: game observation corrupted by emg policy
    - Actions: game actions generated by teacher
    """
    def __init__(self, env, decoder, config):
        super().__init__(env)
        self.decoder = decoder
        self.emg_simulator = WindowSimulator(num_actions=6,#FIXME make param
                                             num_bursts=config.n_bursts,
                                             num_channels=config.n_channels,
                                             window_size=config.window_size,
                                             noise=config.noise)

    def reset(self, seed=0):
        state, info = self.env.reset()
        return state, info

    def step(self, action):
        emg = self.emg_simulator(action[None])
        decoded_action = self.decoder.sample_action({'emg_observation': emg})[-1]
        state, reward, terminated, truncated, info = self.env.step(decoded_action)
        return state, reward, terminated, truncated, info